name: Generate data

# This workflow do the following:
# 1. Checkout the repository
# 2. Git clone inside the repository: git clone --recurse-submodules git@github.com:optiprofiler/optiprofiler.git
# 3. Go to optiprofiler directory and run 'setup' in matlab command line
# 4. Go to this repository root and run python script 's_getDims.py'
# 5. Run in matlab command line 's_getInfo'
# 6. Upload 'probinfo.csv', 'probinfo.mat','probinfo.txt' to artifacts

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Checkout OptiProfiler
        uses: actions/checkout@v4
        with:
          repository: optiprofiler/optiprofiler
          path: optiprofiler
          submodules: recursive
          ref: main
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Run Python script
        run: |
          python s_getDims.py

      - name: Set up MATLAB with optimization toolbox
        if: ${{ matrix.with_optim_toolbox == 'yes' }}
        uses: matlab-actions/setup-matlab@v2
        with:
          release: ${{ matrix.matlab }}
          products: Optimization_Toolbox Parallel_Computing_Toolbox
      
      - name: Run setup and run script in MATLAB
        uses: matlab-actions/run-command@v2.1.1
        with:
          command: |
            cd optiprofiler
            setup
            cd ..
            s_getInfo
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: probinfo-files
          path: |
            probinfo.csv
            probinfo.mat
            probinfo.txt